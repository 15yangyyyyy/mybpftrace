# Dockerfile for building static bpftrace with musl libc
FROM alpine:3.19

RUN apk add --update \
  asciidoctor \
  argp-standalone \
  bash \
  binutils-dev \
  bison \
  bzip2-dev \
  bzip2-static \
  build-base \
  cereal \
  clang17-dev \
  clang17-extra-tools \
  clang17-libs \
  clang17-static \
  cmake \
  elfutils-dev \
  flex-dev \
  git \
  libbpf-dev \
  libelf-static \
  libpcap-dev \
  libc6-compat \
  linux-headers \
  llvm17-dev \
  llvm17-static \
  musl-dev \
  openssl-dev \
  python3 \
  wget \
  xxd \
  xz-dev \
  xz-static \
  zlib-dev \
  zlib-static \
  zstd-dev \
  zstd-static

# Create required symbolic links
RUN ln -s /usr/lib/llvm17/lib/libclang-cpp.a /usr/lib/libclang-cpp.a && \
    ln -s /usr/lib/llvm17/lib/libclang.a /usr/lib/libclang.a && \
    ln -s /usr/include/llvm17/llvm /usr/include/llvm && \
    ln -s /usr/include/llvm17/llvm-c /usr/include/llvm-c && \
    ln -s /usr/include/clang17 /usr/include/clang

# Fix LLVM expecting to use shared zstd lib by modifying the config
RUN find /usr -name "*.cmake" -type f -exec grep -l "zstd::libzstd_shared" {} \; | \
    xargs -r sed -i 's/zstd::libzstd_shared/zstd::libzstd_static/g'

# Create a symlink for clang cmake files
RUN ln -s 'clang17' /usr/lib/cmake/clang

# Some versions of Alpine may need this symlink
RUN if [ ! -e /lib/ld-musl-x86_64.so.1 ] && [ -e /lib/libc.musl-x86_64.so.1 ]; then \
    ln -s /lib/libc.musl-x86_64.so.1 /lib/ld-musl-x86_64.so.1; \
fi

# Create a build script that will be executed in the container
COPY build-alpine.sh /build-alpine.sh
RUN chmod +x /build-alpine.sh

WORKDIR /bpftrace
ENTRYPOINT ["/build-alpine.sh"]
